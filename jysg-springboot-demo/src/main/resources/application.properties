
## thymeleaf模板引擎配置
# 启用缓存:建议生产开启
spring.thymeleaf.cache=false
# 建议模版是否存在
spring.thymeleaf.check-template-location=true
# Content-Type 值
spring.thymeleaf.servlet.content-type=text/html
# 是否启用
spring.thymeleaf.enabled=true
# 模版编码
spring.thymeleaf.encoding=utf-8
# 应该从解析中排除的视图名称列表（用逗号分隔）
spring.thymeleaf.excluded-view-names=
# 模版模式
spring.thymeleaf.mode=HTML5
# 模版存放路径
spring.thymeleaf.prefix=classpath:/templates/
# 模版后缀
spring.thymeleaf.suffix=.html

## 数据源配置
spring.datasource.url=jdbc:mysql://localhost:3306/springboot-demo?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 初始化数量
spring.datasource.druid.initial-size=5
# 最大活跃数
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=1
# 最大连接等待超时时间，单位是毫秒
spring.datasource.druid.max-wait=60000
# 打开PSCache，并且指定每个连接PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'；如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
spring.datasource.druid.validation-query=select 1
spring.datasource.druid.validation-query-timeout=3
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间,单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=600000
spring.datasource.druid.max-evictable-idle-time-millis=900000

# 配置StatFilter
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.db-type=mysql
# 是否开启慢SQL记录
spring.datasource.druid.filter.stat.log-slow-sql=true
# 默认3000（3秒）
spring.datasource.druid.filter.stat.slow-sql-millis=10000

# 配置WallFilter，防御SQL注入攻击
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
spring.datasource.druid.filter.wall.config.delete-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false

# 配置LogFilter，输出JDBC执行的日志
spring.datasource.druid.filter.log4j2.enabled=true

# 监控配置
# WebStatFilter配置，采集web-jdbc关联监控的数据
# 是否启用StatFilter默认值false
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
# 是否启用session统计功能
spring.datasource.druid.web-stat-filter.session-stat-enable=false
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
spring.datasource.druid.web-stat-filter.principal-session-name=xxx.user
spring.datasource.druid.web-stat-filter.principal-cookie-name=xxx.user
spring.datasource.druid.web-stat-filter.profile-enable=true

# StatViewServlet配置，展示Druid的统计信息
# 是否启用StatViewServlet（监控页面）默认值为false
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 是否允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
# deny优先于allow
spring.datasource.druid.stat-view-servlet.allow=127.0.0.0,128.242.127.1/24
spring.datasource.druid.stat-view-servlet.deny=

# Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
spring.datasource.druid.aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔



# 自动创建|更新|验证数据库表结构
spring.jpa.hibernate.ddl-auto=update
# 设置数据库引擎为InnoDB
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# 打印sql语句，方便调试
spring.jpa.show-sql=true
spring.jpa.database=mysql

## mybatis的xml相关配置
# 实体类包路径
mybatis.type-aliases-package=com.yffd.jysg.springboot.demo.entity2
# mybatis基础属性
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
# mapper XML文件
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

## swagger2配置
# 生产环境禁用，设置为false即可
swagger.enable=true

## logback配置
logging.config=classpath:log4j2-spring.xml
logging.level.root=info
# logging.file和logging.path设置一个属性即可，如果两个都设置，则以logging.file为主，logging.path无效
logging.file=D:\\logs\\springboot-demo.log
# 日志文件容量设置，默认10M，超过则分割为多个文件
logging.file.max-history=30

## Redis 配置
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接密码（默认为空）
spring.redis.password=
# Redis服务器连接端口
spring.redis.port=6379
# Redis分片（默认为0）Redis默认有16个分片
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=10000
# 指定spring的缓存为redis
spring.cache.type=redis